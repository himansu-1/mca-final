{"ast":null,"code":"var _jsxFileName = \"E:\\\\~~~PROGAMING~~~\\\\GitHub\\\\mca-final\\\\client\\\\src\\\\contextstate\\\\StudentState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport StudentContext from \"./StudentContext\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentState = props => {\n  _s();\n  const [Student, setStudent] = useState([]);\n  const [showHeader, setShowHeader] = useState(\"\");\n\n  // getting all notes from DB\n  const getStudentinfo = async year => {\n    try {\n      const url = `http://localhost:4000/api/studentinfo/getAllStudents/?passing_year=${year ? year : \"\"}`;\n      const data = await axios.get(url);\n      setStudent(data.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // getting all notes from DB\n  const getStudentbyID = async ID => {\n    try {\n      const url = `http://localhost:4000/api/studentinfo/getbyid/:${ID}`;\n      const data = await axios.get(url);\n      // setStudent(data.data);\n      return data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // inserting Student details : it use during ;\n  // ---> Edit the Login Profile\n  // ---> And while the signup works(used inside the Registration of profile)\n  const insertDetails = async (name, email, address, business_organization, comments, dob, passing_year, phone, position, profession, website, profile_img, token) => {\n    try {\n      const response = await fetch(`http://localhost:4000/api/studentinfo/insertDetails`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": token\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          address,\n          business_organization,\n          comments,\n          dob,\n          passing_year,\n          phone,\n          position,\n          profession,\n          website,\n          profile_img\n        })\n      });\n      const result = await response.json();\n      return result.success;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // It get the student details using the token\n  // ===> used inside the Edit Profile to update the previous data of student\n  const getStudent = async token => {\n    try {\n      const response = await fetch(`http://localhost:4000/api/student/getUser`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": token\n        }\n      });\n      const result = await response.json();\n      // console.log(result.student);\n      return result.student;\n      // setCredentials(result.student);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // it delete the student\n  const deleteStudent = async token => {\n    try {\n      const response = await fetch(`http://localhost:4000/api/studentinfo/deleteStudent`, {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"auth-token\": token\n        }\n      });\n      const result = await response.json();\n      console.log(result);\n      return result.success;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // This is login form setup it saves the Auth-Toke in the localStorage \n  const studentLogin = async (email, password) => {\n    try {\n      const response = await fetch(`http://localhost:4000/api/student/login`, {\n        method: \"POST\",\n        // or 'PUT'\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n      const result = await response.json();\n      result.success ? localStorage.setItem(\"token\", result.authToken) : alert(\"Enter valid credentials\");\n      return result.success;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // This is login form setup it saves the Auth-Toke in the localStorage \n  const studentSignup = async (name, email, password) => {\n    try {\n      const response = await fetch(`http://localhost:4000/api/student/CreateUser`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          password: password\n        })\n      });\n      const result = await response.json();\n      if (result.success) {\n        localStorage.setItem(\"token\", result.authToken);\n        localStorage.setItem(\"name\", name);\n        localStorage.setItem(\"email\", email);\n        return result.success;\n      } else {\n        console.log(result.error);\n        return result.success;\n      }\n\n      // if (!result.success) {\n      //     alert(result.error)\n      // }\n      // if (result.success) {\n      //     localStorage.setItem(\"token\",result.authToken)\n      //     localStorage.setItem(\"name\",credentials.name)\n      //     localStorage.setItem(\"email\",credentials.email)\n      //     // localStorage.setItem(\"password\",credentials.password)\n      //     alert(\"Successfully Signup\")\n      //     navigate(`/student/authorised/registration/${localStorage.getItem(\"token\")}`)\n      // }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StudentContext.Provider, {\n    value: {\n      getStudentinfo,\n      Student,\n      setStudent,\n      getStudentbyID,\n      insertDetails,\n      getStudent,\n      deleteStudent,\n      studentLogin,\n      studentSignup,\n      showHeader,\n      setShowHeader\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentState, \"jRSVe2vclCranLsLR7gax31nYVI=\");\n_c = StudentState;\nexport default StudentState;\nvar _c;\n$RefreshReg$(_c, \"StudentState\");","map":{"version":3,"names":["React","useState","StudentContext","axios","jsxDEV","_jsxDEV","StudentState","props","_s","Student","setStudent","showHeader","setShowHeader","getStudentinfo","year","url","data","get","error","console","log","getStudentbyID","ID","insertDetails","name","email","address","business_organization","comments","dob","passing_year","phone","position","profession","website","profile_img","token","response","fetch","method","headers","body","JSON","stringify","result","json","success","getStudent","student","deleteStudent","studentLogin","password","localStorage","setItem","authToken","alert","studentSignup","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/~~~PROGAMING~~~/GitHub/mca-final/client/src/contextstate/StudentState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport StudentContext from \"./StudentContext\";\r\nimport axios from \"axios\";\r\n\r\nconst StudentState = (props) => {\r\n  const [Student, setStudent] = useState([]);\r\n  const [showHeader,setShowHeader] = useState(\"\")\r\n\r\n  // getting all notes from DB\r\n  const getStudentinfo = async (year) => {\r\n    try {\r\n      const url = `http://localhost:4000/api/studentinfo/getAllStudents/?passing_year=${\r\n        year ? year : \"\"\r\n      }`;\r\n      const data = await axios.get(url);\r\n      setStudent(data.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // getting all notes from DB\r\n  const getStudentbyID = async (ID) => {\r\n    try {\r\n      const url = `http://localhost:4000/api/studentinfo/getbyid/:${ID}`;\r\n      const data = await axios.get(url);\r\n      // setStudent(data.data);\r\n      return data.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // inserting Student details : it use during ;\r\n  // ---> Edit the Login Profile\r\n  // ---> And while the signup works(used inside the Registration of profile)\r\n  const insertDetails = async (\r\n    name,\r\n    email,\r\n    address,\r\n    business_organization,\r\n    comments,\r\n    dob,\r\n    passing_year,\r\n    phone,\r\n    position,\r\n    profession,\r\n    website,\r\n    profile_img,\r\n    token\r\n  ) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:4000/api/studentinfo/insertDetails`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"auth-token\": token,\r\n          },\r\n          body: JSON.stringify({\r\n            name,\r\n            email,\r\n            address,\r\n            business_organization,\r\n            comments,\r\n            dob,\r\n            passing_year,\r\n            phone,\r\n            position,\r\n            profession,\r\n            website,\r\n            profile_img,\r\n          }),\r\n        }\r\n      );\r\n      const result = await response.json();\r\n      return result.success\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // It get the student details using the token\r\n  // ===> used inside the Edit Profile to update the previous data of student\r\n  const getStudent = async (token) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:4000/api/student/getUser`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"auth-token\": token,\r\n          },\r\n        }\r\n      );\r\n      const result = await response.json();\r\n      // console.log(result.student);\r\n      return result.student;\r\n      // setCredentials(result.student);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // it delete the student\r\n  const deleteStudent = async (token) => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:4000/api/studentinfo/deleteStudent`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"auth-token\": token,\r\n          },\r\n        }\r\n      );\r\n      const result = await response.json();\r\n      console.log(result);\r\n      return result.success;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // This is login form setup it saves the Auth-Toke in the localStorage \r\n  const studentLogin = async (email,password) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:4000/api/student/login`, {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          email: email,\r\n          password: password,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      result.success?  localStorage.setItem(\"token\", result.authToken):alert(\"Enter valid credentials\")\r\n      return result.success\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // This is login form setup it saves the Auth-Toke in the localStorage \r\n  const studentSignup = async (name,email,password)=>{\r\n    try {\r\n        const response = await fetch(`http://localhost:4000/api/student/CreateUser`,{\r\n            method:\"POST\",\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            body: JSON.stringify({\r\n                name:name,\r\n                email:email,\r\n                password:password\r\n            })\r\n        })\r\n        const result = await response.json()\r\n        if (result.success) {\r\n          localStorage.setItem(\"token\",result.authToken)\r\n          localStorage.setItem(\"name\",name)\r\n          localStorage.setItem(\"email\",email)\r\n          return result.success\r\n        }else{\r\n          console.log(result.error)\r\n          return result.success\r\n        }\r\n        \r\n        // if (!result.success) {\r\n        //     alert(result.error)\r\n        // }\r\n        // if (result.success) {\r\n        //     localStorage.setItem(\"token\",result.authToken)\r\n        //     localStorage.setItem(\"name\",credentials.name)\r\n        //     localStorage.setItem(\"email\",credentials.email)\r\n        //     // localStorage.setItem(\"password\",credentials.password)\r\n        //     alert(\"Successfully Signup\")\r\n        //     navigate(`/student/authorised/registration/${localStorage.getItem(\"token\")}`)\r\n        // }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n}\r\n  return (\r\n    <StudentContext.Provider\r\n      value={{\r\n        getStudentinfo,\r\n        Student,\r\n        setStudent,\r\n        getStudentbyID,\r\n        insertDetails,\r\n        getStudent,\r\n        deleteStudent,\r\n        studentLogin,\r\n        studentSignup,\r\n        showHeader,\r\n        setShowHeader\r\n      }}\r\n    >\r\n      {props.children}\r\n    </StudentContext.Provider>\r\n  );\r\n};\r\n\r\nexport default StudentState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}