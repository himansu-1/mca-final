{"ast":null,"code":"var _jsxFileName = \"E:\\\\~~~PROGAMING~~~\\\\GitHub\\\\mca-final\\\\client\\\\src\\\\component\\\\Experiment2.js\";\n// import React from 'react';\nimport React, { useState } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [crop, setCrop] = useState({\n  unit: '%',\n  width: 30,\n  aspect: 16 / 9\n});\nconst [croppedImageUrl, setCroppedImageUrl] = useState(null);\nconst [originalImage, setOriginalImage] = useState(null);\nconst onSelectFile = e => {\n  if (e.target.files && e.target.files.length > 0) {\n    const reader = new FileReader();\n    reader.addEventListener('load', () => setOriginalImage(reader.result));\n    reader.readAsDataURL(e.target.files[0]);\n  }\n};\nconst onImageLoaded = image => {\n  // Store a reference to the loaded image for later use\n  setImageRef(image);\n};\nconst onCropChange = crop => {\n  setCrop(crop);\n};\nconst onCropComplete = crop => {\n  if (imageRef && crop.width && crop.height) {\n    getCroppedImg(imageRef, crop);\n  }\n};\nconst getCroppedImg = (image, crop) => {\n  const canvas = document.createElement('canvas');\n  const scaleX = image.naturalWidth / image.width;\n  const scaleY = image.naturalHeight / image.height;\n  canvas.width = crop.width;\n  canvas.height = crop.height;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n  const croppedImageUrl = canvas.toDataURL('image/jpeg');\n  setCroppedImageUrl(croppedImageUrl);\n};\nconst Esperiment2 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: onSelectFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), originalImage && /*#__PURE__*/_jsxDEV(ReactCrop, {\n      src: originalImage,\n      crop: crop,\n      onImageLoaded: onImageLoaded,\n      onChange: onCropChange,\n      onComplete: onCropComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), croppedImageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Crop\",\n      style: {\n        maxWidth: '100%'\n      },\n      src: croppedImageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_c = Esperiment2;\nexport default Esperiment2;\nvar _c;\n$RefreshReg$(_c, \"Esperiment2\");","map":{"version":3,"names":["React","useState","ReactCrop","jsxDEV","_jsxDEV","crop","setCrop","unit","width","aspect","croppedImageUrl","setCroppedImageUrl","originalImage","setOriginalImage","onSelectFile","e","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","onImageLoaded","image","setImageRef","onCropChange","onCropComplete","imageRef","height","getCroppedImg","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","toDataURL","Esperiment2","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","onComplete","alt","style","maxWidth","_c","$RefreshReg$"],"sources":["E:/~~~PROGAMING~~~/GitHub/mca-final/client/src/component/Experiment2.js"],"sourcesContent":["// import React from 'react';\r\nimport React, { useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\n\r\n\r\nconst [crop, setCrop] = useState({ unit: '%', width: 30, aspect: 16 / 9 });\r\nconst [croppedImageUrl, setCroppedImageUrl] = useState(null);\r\nconst [originalImage, setOriginalImage] = useState(null);\r\n\r\n\r\nconst onSelectFile = e => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () => setOriginalImage(reader.result));\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n  \r\n  const onImageLoaded = image => {\r\n    // Store a reference to the loaded image for later use\r\n    setImageRef(image);\r\n  };\r\n  \r\n  const onCropChange = crop => {\r\n    setCrop(crop);\r\n  };\r\n  \r\n  const onCropComplete = crop => {\r\n    if (imageRef && crop.width && crop.height) {\r\n      getCroppedImg(imageRef, crop);\r\n    }\r\n  };\r\n  \r\n  const getCroppedImg = (image, crop) => {\r\n    const canvas = document.createElement('canvas');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext('2d');\r\n  \r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n  \r\n    const croppedImageUrl = canvas.toDataURL('image/jpeg');\r\n    setCroppedImageUrl(croppedImageUrl);\r\n  };\r\n  \r\n\r\nconst Esperiment2 = () => {\r\n    return (\r\n        <div>\r\n          <input type=\"file\" accept=\"image/*\" onChange={onSelectFile} />\r\n          {originalImage && (\r\n            <ReactCrop\r\n              src={originalImage}\r\n              crop={crop}\r\n              onImageLoaded={onImageLoaded}\r\n              onChange={onCropChange}\r\n              onComplete={onCropComplete}\r\n            />\r\n          )}\r\n          {croppedImageUrl && (\r\n            <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedImageUrl} />\r\n          )}\r\n        </div>\r\n      );\r\n      \r\n}\r\n\r\nexport default Esperiment2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}